// ****************************************************************************
// ****************************************************************************
// Copyright SoC Design Research Group, All rights reservxd.
// Electronics and Telecommunications Research Institute (ETRI)
// 
// THESE DOCUMENTS CONTAIN CONFIDENTIAL INFORMATION AND KNOWLEDGE
// WHICH IS THE PROPERTY OF ETRI. NO PART OF THIS PUBLICATION IS
// TO BE USED FOR ANY OTHER PURPOSE, AND THESE ARE NOT TO BE
// REPRODUCED, COPIED, DISCLOSED, TRANSMITTED, STORED IN A RETRIEVAL
// SYSTEM OR TRANSLATED INTO ANY OTHER HUMAN OR COMPUTER LANGUAGE,
// IN ANY FORM, BY ANY MEANS, IN WHOLE OR IN PART, WITHOUT THE
// COMPLETE PRIOR WRITTEN PERMISSION OF ETRI.
// ****************************************************************************
// 2025-08-13
// Kyuseung Han (han@etri.re.kr)
// ****************************************************************************
// ****************************************************************************

function integer REQUIRED_BITWIDTH_UNSIGNED;
	input integer value;
begin
	REQUIRED_BITWIDTH_UNSIGNED = LOG2RU_MIN1(value+1);
end
endfunction

function integer REQUIRED_BITWIDTH_SIGNED;
	input integer value;
begin
	REQUIRED_BITWIDTH_SIGNED = REQUIRED_BITWIDTH_UNSIGNED(value)+1;
end
endfunction

function integer REQUIRED_BITWIDTH;
	input integer value;
begin
	REQUIRED_BITWIDTH = REQUIRED_BITWIDTH_SIGNED(value);
end
endfunction

function integer REQUIRED_BITWIDTH_INDEX;
	input integer range;
begin
	REQUIRED_BITWIDTH_INDEX = REQUIRED_BITWIDTH_UNSIGNED(range-1);
end
endfunction

function integer GET_ADDR_MASK_BITWIDTH;
	input integer bw_data;
begin
	GET_ADDR_MASK_BITWIDTH = LOG2RU(`NUM_BYTE(bw_data));
end
endfunction

function integer GET_SHIFT_AMOUNT_FOR_BYTE_ADDR;
	input integer value;
begin
	GET_SHIFT_AMOUNT_FOR_BYTE_ADDR = LOGRU_MIN1(value,`BW_BYTE);
end
endfunction
