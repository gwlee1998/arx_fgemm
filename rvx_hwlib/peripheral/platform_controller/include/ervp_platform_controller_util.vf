// ****************************************************************************
// ****************************************************************************
// Copyright SoC Design Research Group, All rights reservxd.
// Electronics and Telecommunications Research Institute (ETRI)
// 
// THESE DOCUMENTS CONTAIN CONFIDENTIAL INFORMATION AND KNOWLEDGE
// WHICH IS THE PROPERTY OF ETRI. NO PART OF THIS PUBLICATION IS
// TO BE USED FOR ANY OTHER PURPOSE, AND THESE ARE NOT TO BE
// REPRODUCED, COPIED, DISCLOSED, TRANSMITTED, STORED IN A RETRIEVAL
// SYSTEM OR TRANSLATED INTO ANY OTHER HUMAN OR COMPUTER LANGUAGE,
// IN ANY FORM, BY ANY MEANS, IN WHOLE OR IN PART, WITHOUT THE
// COMPLETE PRIOR WRITTEN PERMISSION OF ETRI.
// ****************************************************************************
// 2025-08-13
// Kyuseung Han (han@etri.re.kr)
// ****************************************************************************
// ****************************************************************************

`include "munoc_memorymap_offset.vh"

task release_all_reset;
begin
	write_system_using_jtag(`MMAP_OFFSET_RESET_CMD,`RESET_CMD_AUTO_INCR);
	$display("[JTAG:INFO] release all reset");
end
endtask

task reset_platform;
begin
	write_system_using_jtag(`MMAP_OFFSET_RESET_CMD,`RESET_CMD_INIT);
	$display("[JTAG:INFO] reset platform");
end
endtask

task set_all_ready;
begin
	print_system_using_jtag(`MMAP_OFFSET_PLATFORM_REGISTER_BOOT_STATUS);
	write_system_using_jtag(`MMAP_OFFSET_PLATFORM_REGISTER_BOOT_STATUS,1);
	$display("[JTAG:INFO] set ready-to-run");
end
endtask

task set_sim_env;
begin
	write_system_using_jtag(`MMAP_OFFSET_PLATFORM_REGISTER_SIM_ENV,1);
	$display("[JTAG:INFO] set sim env");
end
endtask

task set_app_addr;
begin
	write_system_using_jtag(`MMAP_OFFSET_PLATFORM_REGISTER_APP_ADDR,`APP_ADDR);
	$display("[JTAG:INFO] set app addr");
end
endtask

task print_pc;
begin
	print_system_using_jtag(`MMAP_OFFSET_PLATFORM_REGISTER_CORE_PC00);
	$display("[JTAG:INFO] print pc");
end
endtask

task test_noc;
begin
	print_system_using_jtag(`SUBMODULE_ADDR_ERVP_PLATFORM_CONTROLLER_EXTERNAL+`MMAP_OFFSET_INFO_VERSION0);
	print_system_using_jtag(`SUBMODULE_ADDR_ERVP_PLATFORM_CONTROLLER_EXTERNAL+`MMAP_OFFSET_CONTROLLER_NODEID);
	print_system_using_jtag(`SUBMODULE_ADDR_ERVP_PLATFORM_CONTROLLER_EXTERNAL+`MMAP_OFFSET_CONTROLLER_NAME0);
end
endtask

