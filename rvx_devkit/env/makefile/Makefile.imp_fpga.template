## ****************************************************************************
## ****************************************************************************
## Copyright SoC Design Research Group, All rights reserved.
## Electronics and Telecommunications Research Institute (ETRI)
##
## THESE DOCUMENTS CONTAIN CONFIDENTIAL INFORMATION AND KNOWLEDGE 
## WHICH IS THE PROPERTY OF ETRI. NO PART OF THIS PUBLICATION IS 
## TO BE USED FOR ANY OTHER PURPOSE, AND THESE ARE NOT TO BE 
## REPRODUCED, COPIED, DISCLOSED, TRANSMITTED, STORED IN A RETRIEVAL 
## SYSTEM OR TRANSLATED INTO ANY OTHER HUMAN OR COMPUTER LANGUAGE, 
## IN ANY FORM, BY ANY MEANS, IN WHOLE OR IN PART, WITHOUT THE 
## COMPLETE PRIOR WRITTEN PERMISSION OF ETRI.
## ****************************************************************************
## 2019-04-15
## Kyuseung Han (han@etri.re.kr)
## ****************************************************************************
## ****************************************************************************

ifdef RVX_MINI_HOME
	include ${RVX_MINI_HOME}/rvx_config.mh
else
	include ${RVX_DEVKIT_HOME}/rvx_config.mh
endif

-include each_imp.mh

TEMPLATE_FILE = ${RVX_ENV}/makefile/Makefile.imp_fpga.template
TEMPLATE_CONFIG = "${TEMPLATE_CONFIG}"
include ${RVX_UTIL_HOME}/template_makefile.mh

ifndef PLATFORM_DIR
PLATFORM_DIR = $(call absolute_path,${CURDIR}/..)
endif
PLATFORM_NAME = "${PLATFORM_NAME}"
TARGET_IMP_CLASS="${TARGET_IMP_CLASS}"
OUTPUT_FILE=""

FREEZE_FILE_LIST=Makefile ${PLATFORM_NAME}.xml *.tcl ./imp_result/*.bit ./imp_result/*.rpt ./imp_result/*.log ./imp_result/*.v *.cfg .gitignore
TEMP_FILE_LIST=./run_*.tcl ./program_*.tcl ./dump_memory.tcl

########
# both #
########

APP_NAME ?= None
BUILD_MODE ?= debug

ENGINE_WS ?= $(call absolute_path,${PLATFORM_DIR}/..)
ENGINE_TARGET=imp_fpga
ENGINE_USER_CMD_LIST=path clean project open_project imp reimp check_imp program program_flash dump check_dumped_image app_list 
ENGINE_USER_CMD_ADV_LIST=ila ila_clean manual_top
ENGINE_SYSTEM_CMD_LIST=module top pll info xci tcl build after_build clean_build run_ocd connect_ocd printf mcs run flash __project __imp
ENGINE_PARA= -p ${PLATFORM_NAME} -a ${APP_NAME} -tic ${TARGET_IMP_CLASS} -bm ${BUILD_MODE} -imp_dir ${CURDIR} -o ${OUTPUT_FILE}
MAKEFILE_USER_CMD_LIST=test ocd telnet mcom
MAKEFILE_USER_CMD_ADV_LIST=freeze
APP_LIST = $(shell ${PYTHON3_CMD} ${RVX_UTIL_HOME}/os_util.py dir_list ${ENGINE_WS}/${PLATFORM_NAME}/app )
RUN_APP_CMD_LIST=build clean rebuild run rerun opt reopt profile edit
include ${RVX_ENV}/engine/rvx_make2engine.mh

#######
# ocd #
#######

## BUILD ##

$(addsuffix .build, ${APP_LIST}):%.build:
	@make --no-print-directory build APP_NAME=$(*) BUILD_MODE=$(BUILD_MODE)

$(addsuffix .clean, ${APP_LIST}):%.clean:
	@make --no-print-directory clean_build APP_NAME=$(*)

$(addsuffix .rebuild, ${APP_LIST}):%.rebuild: %.clean %.build

## RUN ##

$(addsuffix ._run, ${APP_LIST}):%._run:
	@make --no-print-directory run APP_NAME=$(*) BUILD_MODE=$(BUILD_MODE)

$(addsuffix .run, ${APP_LIST}):%.run:
	@make --no-print-directory $(*)._run BUILD_MODE=debug

$(addsuffix .rerun, ${APP_LIST}):%.rerun: %.clean %.run

$(addsuffix .opt, ${APP_LIST}):%.opt:
	@make --no-print-directory $(*)._run BUILD_MODE=release

$(addsuffix .reopt, ${APP_LIST}):%.reopt: %.clean %.opt

$(addsuffix .profile, ${APP_LIST}):%.profile: %.clean
	@make --no-print-directory $(*)._run BUILD_MODE=profile

## MISC ##

$(addsuffix .all, ${APP_LIST}):%.all: %.rerun

$(addsuffix .flash, ${APP_LIST}):%.flash: %
	@make --no-print-directory flash APP_NAME=$(*) BUILD_MODE=$(BUILD_MODE)

$(addsuffix .import_run, ${APP_LIST}):%.import_run:
	@cd ${PLATFORM_DIR}/app && make --no-print-directory $(*).import_app
	@make --no-print-directory $(*).run BUILD_MODE=$(BUILD_MODE)

${APP_LIST}:%:
	@make --no-print-directory build after_build APP_NAME=$(*) BUILD_MODE=$(BUILD_MODE)

$(addsuffix .edit, ${APP_LIST}):%.edit:
	@cd ${PLATFORM_DIR}/app/$(*)/src && vim main.c

ocd: run_ocd

telnet: connect_ocd

mcom: printf

#######
# etc #
#######

test: program mcom hello.all

freeze:
	rm -rf set_path.tcl
	git add -f ${FREEZE_FILE_LIST}
	-git rm -rf ${TEMP_FILE_LIST}

##########
# config #
##########

# modify PLATFORM_DIR in TEMPLATE_CONFIG
# make --no-print-directory update_makefile
# make --no-print-directory path

.PHONY: ${APP_LIST}
