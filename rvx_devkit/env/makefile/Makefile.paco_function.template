## ****************************************************************************
## ****************************************************************************
## Copyright SoC Design Research Group, All rights reserved.    
## Electronics and Telecommunications Research Institute (ETRI)
##
## THESE DOCUMENTS CONTAIN CONFIDENTIAL INFORMATION AND KNOWLEDGE 
## WHICH IS THE PROPERTY OF ETRI. NO PART OF THIS PUBLICATION IS 
## TO BE USED FOR ANY OTHER PURPOSE, AND THESE ARE NOT TO BE 
## REPRODUCED, COPIED, DISCLOSED, TRANSMITTED, STORED IN A RETRIEVAL 
## SYSTEM OR TRANSLATED INTO ANY OTHER HUMAN OR COMPUTER LANGUAGE, 
## IN ANY FORM, BY ANY MEANS, IN WHOLE OR IN PART, WITHOUT THE 
## COMPLETE PRIOR WRITTEN PERMISSION OF ETRI.
## ****************************************************************************
## 2022-04-29
## Kyuseung Han (han@etri.re.kr)
## ****************************************************************************
## ****************************************************************************

ifdef RVX_MINI_HOME
	include ${RVX_MINI_HOME}/rvx_config.mh
else
	include ${RVX_DEVKIT_HOME}/rvx_config.mh
endif

TEMPLATE_FILE = ${RVX_ENV}/makefile/Makefile.paco_function.template
TEMPLATE_CONFIG = "${TEMPLATE_CONFIG}"
include ${RVX_UTIL_HOME}/template_makefile.mh

PACT_ARCH="${PACT_ARCH}"
USE_DIV="${USE_DIV}"
USE_FDIV="${USE_FDIV}"

PLATFORM_DIR = $(call absolute_path,${CURDIR}/../..)
PLATFORM_NAME = $(notdir ${PLATFORM_DIR})

include ${PLATFORM_DIR}/arch/ssw/env/set_env.mh
include ${PLATFORM_DIR}/arch/ssw/env/set_memory.mh
include ${RVX_SSW_HOME}/riscv/riscv_compile.mh

CFLAGS_PACT  = -O2 -fno-delete-null-pointer-checks -MD -Wall -fno-builtin-printf -fno-reorder-functions
CFLAGS_PACT += -march=${PACT_ARCH} -mabi=${RISCV_ABI}
ifeq (${USE_DIV},false)
CFLAGS_PACT += -mno-div -mno-fdiv
endif
ifeq (${USE_FDIV},false)
CFLAGS_PACT += -mno-fdiv
endif

CXXFLAGS_PACT = ${CFLAGS_PACT}
CXXFLAGS_PACT += -fno-rtti

PACT_SRC_DIR=./

C_SRC_PACT += $(wildcard $(PACT_SRC_DIR)/*.c)
CXX_SRC_PACT += $(wildcard $(PACT_SRC_DIR)/*.cpp)
ASM_SRC_PACT += $(wildcard $(PACT_SRC_DIR)/*.S)

C_OBJ_PACT = $(C_SRC_PACT:.c=.o)
CXX_OBJ_PACT = $(CXX_SRC_PACT:.cpp=.o)
ASM_OBJ_PACT = $(ASM_SRC_PACT:.S=.o)

clean:
	rm -rf *.o *.d

build: ${C_OBJ_PACT} ${CXX_OBJ_PACT} ${ASM_OBJ_PACT}

$(C_OBJ_PACT):%.o: %.c
	$(CC) $(CFLAGS_PACT) $(INCLUDES) -c $<

$(CXX_OBJ_PACT):%.o: %.cpp
	$(CC) $(CXXFLAGS_PACT) $(INCLUDES) -c $<

$(ASM_OBJ_PACT):%.o: %.S
	$(CC) $(CFLAGS_PACT) $(INCLUDES) -c $<
